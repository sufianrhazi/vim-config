if &compatible
  set nocompatible               " Be iMproved
endif

" Pathogen
execute pathogen#infect()
filetype plugin indent on


" General usability
" -----------------

set expandtab
set shiftwidth=4
set softtabstop=4
set tabstop=8
set backspace=2


" Display options
" ---------------

set ruler
set showcmd
set showmode
set hlsearch
set ignorecase
set smartcase
set t_Co=256 " 256 colors, srsly
let g:solarized_termcolors=256
syntax enable
colorscheme solarized
set background=dark
set ambiwidth=single
set conceallevel=2

set spell
au BufNewFile,BufRead * syn spell toplevel

" airline Options
" -----------------
"

set laststatus=2
let g:airline#extensions#tabline#enabled = 1

if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif

let g:airline_theme = 'solarized'

let g:airline_left_sep = ''
let g:airline_right_sep = ''
let g:airline_symbols.linenr = '␊'
let g:airline_symbols.branch = '⎇'
let g:airline_symbols.paste = 'π'
let g:airline_symbols.whitespace = 'Ξ'
let g:airline#extensions#tabline#left_sep = ''
let g:airline#extensions#tabline#left_alt_sep = ''
let g:airline#extensions#tabline#right_sep = ''
let g:airline#extensions#tabline#right_alt_sep = ''


" Syntastic Options
" -----------------

let g:syntastic_check_on_open=0
let g:syntastic_enable_signs=1
let g:syntastic_enable_highlighting=1
let g:syntastic_mode_map = { 'mode': 'active',
                           \ 'active_filetypes': [],
                           \ 'passive_filetypes': [] }
let g:syntastic_error_symbol='⚑'
let g:syntastic_style_error_symbol='⚑'
let g:syntastic_warning_symbol='»'
let g:syntastic_style_warning_symbol='»'

" Leader mappings
" ---------------

let mapleader=","
map <Leader>gs :Git show <cword><CR>
map <Leader>gb :Gblame<CR>
map <Leader>gd :Gdiff<CR>
map <Leader>h :nohls<CR>
map <Leader>ws :%s/ \+$//<CR>
map <Leader>bn :bn<CR>
map <Leader>bp :bp<CR>
map <Leader>bc :bd<CR>


" Insert mappings
" ---------------

imap `alpha α
imap `beta β
imap `gamma γ
imap `Delta Δ
imap `lambda λ
imap `mu μ
imap `pi π
imap `Sigma Σ
imap `Theta Θ
imap `theta θ
imap `Omega Ω

imap `lquot “
imap `rquot ”
imap `quot ’

imap `uarr ↑
imap `rarr →
imap `darr ↓
imap `larr ←
imap `barr ↔

imap `check ✓
imap `cross ✗

imap `copy ©
imap `tm ™

imap `cr ␍
imap `lf ␊

imap `degree °

imap `info ℹ
imap `warning ⚠

imap `paragraph ¶
imap `section §
imap `dagger †
imap `doubledagger ‡

imap `forall ∀
imap `exists ∃

imap `intersect ∩
imap `union ∪
imap `subset ⊂
imap `element ∈

imap `emdash —
imap `endash –

imap `flat ♭
imap `natural ♮
imap `sharp ♯


" Visual mappings
" ---------------

" Tabular tools
vmap <Leader>= :Tabularize /^[^=]*\zs=<CR>
vmap <Leader>: :Tabularize /^[^:]*\zs:<CR>
vmap <Leader>? :Tabularize /^[^=?:]*\zs[=?:]<CR>
vmap <Leader>/ :Tabularize /^[^/]*\zs/<CR>
vmap <Leader>\| :Tabularize /\|<CR>


" Filetype mappings
" -----------------

au BufNewFile,BufRead SConstruct set ft=python
au BufNewFile,BufRead *.scons set ft=python
au BufNewFile,BufRead *.md set ft=markdown

au BufNewFile,BufRead *.hs set colorcolumn=80

" vim-jsx
"
let g:jsx_ext_required = 0 " rx-web uses .js as jsx
